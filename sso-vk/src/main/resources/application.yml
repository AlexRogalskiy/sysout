spring:
  thymeleaf:
    cache: false
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: your-client-id
            client-secret: your-client-secret
          google:
            client-id: your-client-id
            client-secret: your-client-secret
          vk:
            client-id: your-client-id
            client-secret: your-client-secret
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            #use post, as vk needs clientId and clientSecret as request params and does not accepts Basic auth
            client-authentication-method: post
            authorization-grant-type: authorization_code
            scope: email
        provider:
          vk:
            #revoke=1 needs to always show vk dialog
            authorization-uri: https://oauth.vk.com/authorize?revoke=1
            token-uri: https://oauth.vk.com/access_token
            user-info-uri: https://api.vk.com/method/users.get?v=5.52&fields=photo_max
            user-name-attribute: first_name
          google:
            user-name-attribute: name
          github:
            user-name-attribute: login

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.springframework.security.oauth2: INFO
    #    org.springframework.boot.autoconfigure: DEBUG
    org.springframework.web.client.RestTemplate: DEBUG
    org.springframework.web.reactive.function.client.ExchangeFunctions: TRACE